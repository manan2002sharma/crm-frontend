{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Man\\\\Downloads\\\\Compressed\\\\crm-ticket\\\\crm-frontend-8674e752f8218131abd459f664a565932ab1519e\\\\src\\\\components\\\\add-ticket-form\\\\AddTicketForm.comp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Jumbotron, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { openNewTicket } from \"./addTicketAction\";\nimport { shortText } from \"../../utils/validation\";\nimport \"./add-ticket-form.style.css\";\nconst initialFrmDt = {\n  subject: \"\",\n  issueDate: \"\",\n  message: \"\"\n};\nconst initialFrmError = {\n  subject: false,\n  issueDate: false,\n  message: false\n};\nexport const AddTicketForm = () => {\n  const dispatch = useDispatch();\n  const {\n    user: {\n      name\n    }\n  } = useSelector(state => state.user);\n  const {\n    isLoading,\n    error,\n    successMsg\n  } = useSelector(state => state.openTicket);\n  const [frmData, setFrmData] = useState(initialFrmDt);\n  const [frmDataErro, setFrmDataErro] = useState(initialFrmError);\n  useEffect(() => {}, [frmData, frmDataErro]);\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFrmData({ ...frmData,\n      [name]: value\n    });\n  };\n\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    setFrmDataErro(initialFrmError);\n    const isSubjectValid = await shortText(frmData.subject);\n    setFrmDataErro({ ...initialFrmError,\n      subject: !isSubjectValid\n    });\n    dispatch(openNewTicket({ ...frmData,\n      sender: name\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \"mt-3 add-new-ticket bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-info text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Add New Ticket\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, error), successMsg && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }\n  }, successMsg), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    variant: \"primary\",\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Subject\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"subject\",\n    value: frmData.subject // minLength=\"3\"\n    ,\n    maxLength: \"100\",\n    onChange: handleOnChange,\n    placeholder: \"Subject\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, frmDataErro.subject && \"SUbject is required!\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    as: Row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    column: true,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Issue Found\"), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"issueDate\",\n    value: frmData.issueDate,\n    onChange: handleOnChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    name: \"message\",\n    rows: \"5\",\n    value: frmData.message,\n    onChange: handleOnChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"info\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Open Ticket\")));\n}; // AddTicketForm.propTypes = {\n//   handleOnSubmit: PropTypes.func.isRequired,\n//   handleOnChange: PropTypes.func.isRequired,\n//   frmDt: PropTypes.object.isRequired,\n//   frmDataErro: PropTypes.object.isRequired,\n// };","map":{"version":3,"sources":["C:/Users/Man/Downloads/Compressed/crm-ticket/crm-frontend-8674e752f8218131abd459f664a565932ab1519e/src/components/add-ticket-form/AddTicketForm.comp.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Form","Jumbotron","Row","Col","Button","Spinner","Alert","openNewTicket","shortText","initialFrmDt","subject","issueDate","message","initialFrmError","AddTicketForm","dispatch","user","name","state","isLoading","error","successMsg","openTicket","frmData","setFrmData","frmDataErro","setFrmDataErro","handleOnChange","e","value","target","handleOnSubmit","preventDefault","isSubjectValid","sender"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,KAPF,QAQO,iBARP;AASA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,OAAO,6BAAP;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAKA,MAAMC,eAAe,GAAG;AACtBH,EAAAA,OAAO,EAAE,KADa;AAEtBC,EAAAA,SAAS,EAAE,KAFW;AAGtBC,EAAAA,OAAO,EAAE;AAHa,CAAxB;AAMA,OAAO,MAAME,aAAa,GAAG,MAAM;AACjC,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AAEA,QAAM;AACJkB,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAFf;AAIA,QAAM;AAAEG,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAAmCtB,WAAW,CACjDmB,KAAD,IAAWA,KAAK,CAACI,UADiC,CAApD;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAACa,YAAD,CAAtC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAACiB,eAAD,CAA9C;AAEAhB,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAAC0B,OAAD,EAAUE,WAAV,CAAX,CAAT;;AAEA,QAAME,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAM;AAAEX,MAAAA,IAAF;AAAQY,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AAEAN,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAET,OAACN,IAAD,GAAQY;AAFC,KAAD,CAAV;AAID,GAPD;;AASA,QAAME,cAAc,GAAG,MAAOH,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACI,cAAF;AAEAN,IAAAA,cAAc,CAACb,eAAD,CAAd;AAEA,UAAMoB,cAAc,GAAG,MAAMzB,SAAS,CAACe,OAAO,CAACb,OAAT,CAAtC;AAEAgB,IAAAA,cAAc,CAAC,EACb,GAAGb,eADU;AAEbH,MAAAA,OAAO,EAAE,CAACuB;AAFG,KAAD,CAAd;AAKAlB,IAAAA,QAAQ,CAACR,aAAa,CAAC,EAAE,GAAGgB,OAAL;AAAcW,MAAAA,MAAM,EAAEjB;AAAtB,KAAD,CAAd,CAAR;AACD,GAbD;;AAeA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,8BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,KAAK,iBAAI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBA,KAAzB,CADZ,EAEGC,UAAU,iBAAI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BA,UAA1B,CAFjB,EAGGF,SAAS,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHhB,CAHF,eAQE,oBAAC,IAAD;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEY,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE7B,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAEqB,OAAO,CAACb,OAFjB,CAGE;AAHF;AAIE,IAAA,SAAS,EAAC,KAJZ;AAKE,IAAA,QAAQ,EAAEiB,cALZ;AAME,IAAA,WAAW,EAAC,SANd;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,WAAW,CAACf,OAAZ,IAAuB,sBAD1B,CAVF,CAJF,CADF,eAoBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAER,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,MAAlB;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAEqB,OAAO,CAACZ,SAHjB;AAIE,IAAA,QAAQ,EAAEgB,cAJZ;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CApBF,eAkCE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,KAAK,EAAEJ,OAAO,CAACX,OAJjB;AAKE,IAAA,QAAQ,EAAEe,cALZ;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAlCF,eA8CE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,MAA9B;AAAqC,IAAA,KAAK,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA9CF,CARF,CADF;AA6DD,CArGM,C,CAuGP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Form,\n  Jumbotron,\n  Row,\n  Col,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport { openNewTicket } from \"./addTicketAction\";\nimport { shortText } from \"../../utils/validation\";\n\nimport \"./add-ticket-form.style.css\";\n\nconst initialFrmDt = {\n  subject: \"\",\n  issueDate: \"\",\n  message: \"\",\n};\nconst initialFrmError = {\n  subject: false,\n  issueDate: false,\n  message: false,\n};\n\nexport const AddTicketForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    user: { name },\n  } = useSelector((state) => state.user);\n\n  const { isLoading, error, successMsg } = useSelector(\n    (state) => state.openTicket\n  );\n\n  const [frmData, setFrmData] = useState(initialFrmDt);\n  const [frmDataErro, setFrmDataErro] = useState(initialFrmError);\n\n  useEffect(() => {}, [frmData, frmDataErro]);\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    setFrmData({\n      ...frmData,\n      [name]: value,\n    });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    setFrmDataErro(initialFrmError);\n\n    const isSubjectValid = await shortText(frmData.subject);\n\n    setFrmDataErro({\n      ...initialFrmError,\n      subject: !isSubjectValid,\n    });\n\n    dispatch(openNewTicket({ ...frmData, sender: name }));\n  };\n\n  return (\n    <Jumbotron className=\"mt-3 add-new-ticket bg-light\">\n      <h1 className=\"text-info text-center\">Add New Ticket</h1>\n      <hr />\n      <div>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {successMsg && <Alert variant=\"primary\">{successMsg}</Alert>}\n        {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n      </div>\n      <Form autoComplete=\"off\" onSubmit={handleOnSubmit}>\n        <Form.Group as={Row}>\n          <Form.Label column sm={3}>\n            Subject\n          </Form.Label>\n          <Col sm={9}>\n            <Form.Control\n              name=\"subject\"\n              value={frmData.subject}\n              // minLength=\"3\"\n              maxLength=\"100\"\n              onChange={handleOnChange}\n              placeholder=\"Subject\"\n              required\n            />\n            <Form.Text className=\"text-danger\">\n              {frmDataErro.subject && \"SUbject is required!\"}\n            </Form.Text>\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm={3}>\n            Issue Found\n          </Form.Label>\n          <Col sm={9}>\n            <Form.Control\n              type=\"date\"\n              name=\"issueDate\"\n              value={frmData.issueDate}\n              onChange={handleOnChange}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            name=\"message\"\n            rows=\"5\"\n            value={frmData.message}\n            onChange={handleOnChange}\n            required\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"info\" block>\n          Open Ticket\n        </Button>\n      </Form>\n    </Jumbotron>\n  );\n};\n\n// AddTicketForm.propTypes = {\n//   handleOnSubmit: PropTypes.func.isRequired,\n//   handleOnChange: PropTypes.func.isRequired,\n//   frmDt: PropTypes.object.isRequired,\n//   frmDataErro: PropTypes.object.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}