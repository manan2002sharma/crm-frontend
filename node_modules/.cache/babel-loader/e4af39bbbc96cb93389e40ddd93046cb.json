{"ast":null,"code":"var _jsxFileName = \"M:\\\\tss-project\\\\crm-frontend\\\\src\\\\components\\\\login\\\\Login.comp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col, Form, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { loginPending, loginSuccess, loginFail } from \"./loginSlice\";\nimport { userLogin } from \"../../api/userApi\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\nexport const LoginForm = ({\n  formSwitcher\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    isLoading,\n    isAuth,\n    error\n  } = useSelector(state => state.login);\n  useEffect(() => {\n    sessionStorage.getItem(\"accessJWT\") && history.push(\"/dashboard\");\n  }, [history, isAuth]);\n  const [email, setEmail] = useState(\"e2@e.com\");\n  const [password, setPassword] = useState(\"password\");\n\n  const handleOnChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return alert(\"Fill up all the form!\");\n    }\n\n    dispatch(loginPending());\n\n    try {\n      const isAuth = await userLogin({\n        email,\n        password\n      });\n\n      if (isAuth.status === \"error\") {\n        return dispatch(loginFail(isAuth.message));\n      }\n\n      dispatch(loginSuccess());\n      dispatch(getUserProfile());\n      history.push(\"/dashboard\");\n    } catch (error) {\n      dispatch(loginFail(error.message));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-info text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Client Login\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, error), /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleOnChange,\n    placeholder: \"Enter Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    onChange: handleOnChange,\n    value: password,\n    placeholder: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Login\"), isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    variant: \"primary\",\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: () => formSwitcher(\"rest\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Forget Password?\"))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Are you new here? \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"Register Now\"))));\n};\nLoginForm.propTypes = {\n  formSwitcher: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["M:/tss-project/crm-frontend/src/components/login/Login.comp.js"],"names":["React","useState","useEffect","PropTypes","Container","Row","Col","Form","Button","Spinner","Alert","useDispatch","useSelector","useHistory","loginPending","loginSuccess","loginFail","userLogin","getUserProfile","LoginForm","formSwitcher","dispatch","history","isLoading","isAuth","error","state","login","sessionStorage","getItem","push","email","setEmail","password","setPassword","handleOnChange","e","name","value","target","handleOnSubmit","preventDefault","alert","status","message","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { loginPending, loginSuccess, loginFail } from \"./loginSlice\";\nimport { userLogin } from \"../../api/userApi\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\n\nexport const LoginForm = ({ formSwitcher }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { isLoading, isAuth, error } = useSelector((state) => state.login);\n\n  useEffect(() => {\n    sessionStorage.getItem(\"accessJWT\") && history.push(\"/dashboard\");\n  }, [history, isAuth]);\n\n  const [email, setEmail] = useState(\"e2@e.com\");\n  const [password, setPassword] = useState(\"password\");\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n\n      case \"password\":\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      return alert(\"Fill up all the form!\");\n    }\n\n    dispatch(loginPending());\n\n    try {\n      const isAuth = await userLogin({ email, password });\n\n      if (isAuth.status === \"error\") {\n        return dispatch(loginFail(isAuth.message));\n      }\n\n      dispatch(loginSuccess());\n      dispatch(getUserProfile());\n      history.push(\"/dashboard\");\n    } catch (error) {\n      dispatch(loginFail(error.message));\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-info text-center\">Client Login</h1>\n          <hr />\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form autoComplete=\"off\" onSubmit={handleOnSubmit}>\n            <Form.Group>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleOnChange}\n                placeholder=\"Enter Email\"\n                required\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                onChange={handleOnChange}\n                value={password}\n                placeholder=\"password\"\n                required\n              />\n            </Form.Group>\n\n            <Button type=\"submit\">Login</Button>\n            {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n          </Form>\n          <hr />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <a href=\"#!\" onClick={() => formSwitcher(\"rest\")}>\n            Forget Password?\n          </a>\n        </Col>\n      </Row>\n      <Row className=\"py-4\">\n        <Col>\n          Are you new here? <a href=\"/registration\">Register Now</a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nLoginForm.propTypes = {\n  formSwitcher: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}