{"ast":null,"code":"var _jsxFileName = \"M:\\\\tss-project\\\\crm-frontend\\\\src\\\\pages\\\\ticket\\\\Ticket.page.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSingleTicket, closeTicket } from \"../ticket-list/ticketsAction\";\nimport { resetResponseMsg } from \"../ticket-list/ticketsSlice\";\nexport const Ticket = () => {\n  const {\n    tId\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    error,\n    selectedTicket,\n    replyMsg,\n    replyTicketError\n  } = useSelector(state => state.tickets);\n  useEffect(() => {\n    dispatch(fetchSingleTicket(tId));\n    return () => {\n      (replyMsg || replyTicketError) && dispatch(resetResponseMsg());\n    };\n  }, [tId, dispatch, replyMsg, replyTicketError]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageBreadcrumb, {\n    page: \"Ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(Spinner, {\n    variant: \"primary\",\n    animation: \"border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, error), replyTicketError && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, replyTicketError), replyMsg && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }\n  }, replyMsg))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-weight-bolder text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subject\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Subject: \", selectedTicket.subject), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Ticket Opened:\", \" \", selectedTicket.openAt && new Date(selectedTicket.openAt).toLocaleString()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Status: \", selectedTicket.status)), /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-info\",\n    onClick: () => dispatch(closeTicket(tId)),\n    disabled: selectedTicket.status === \"Closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Close Ticket\"))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, selectedTicket.conversations && /*#__PURE__*/React.createElement(MessageHistory, {\n    msg: selectedTicket.conversations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UpdateTicket, {\n    _id: tId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["M:/tss-project/crm-frontend/src/pages/ticket/Ticket.page.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Container","Row","Col","Button","Spinner","Alert","PageBreadcrumb","MessageHistory","UpdateTicket","useParams","fetchSingleTicket","closeTicket","resetResponseMsg","Ticket","tId","dispatch","isLoading","error","selectedTicket","replyMsg","replyTicketError","state","tickets","subject","openAt","Date","toLocaleString","status","conversations"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchSingleTicket, closeTicket } from \"../ticket-list/ticketsAction\";\nimport { resetResponseMsg } from \"../ticket-list/ticketsSlice\";\n\nexport const Ticket = () => {\n  const { tId } = useParams();\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    error,\n    selectedTicket,\n    replyMsg,\n    replyTicketError,\n  } = useSelector((state) => state.tickets);\n\n  useEffect(() => {\n    dispatch(fetchSingleTicket(tId));\n\n    return () => {\n      (replyMsg || replyTicketError) && dispatch(resetResponseMsg());\n    };\n  }, [tId, dispatch, replyMsg, replyTicketError]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <PageBreadcrumb page=\"Ticket\" />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {replyTicketError && (\n            <Alert variant=\"danger\">{replyTicketError}</Alert>\n          )}\n          {replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"text-weight-bolder text-secondary\">\n          <div className=\"subject\">Subject: {selectedTicket.subject}</div>\n          <div className=\"date\">\n            Ticket Opened:{\" \"}\n            {selectedTicket.openAt &&\n              new Date(selectedTicket.openAt).toLocaleString()}\n          </div>\n          <div className=\"status\">Status: {selectedTicket.status}</div>\n        </Col>\n        <Col className=\"text-right\">\n          <Button\n            variant=\"outline-info\"\n            onClick={() => dispatch(closeTicket(tId))}\n            disabled={selectedTicket.status === \"Closed\"}\n          >\n            Close Ticket\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"mt-4\">\n        <Col>\n          {selectedTicket.conversations && (\n            <MessageHistory msg={selectedTicket.conversations} />\n          )}\n        </Col>\n      </Row>\n      <hr />\n\n      <Row className=\"mt-4\">\n        <Col>\n          <UpdateTicket _id={tId} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}