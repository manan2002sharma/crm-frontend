{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: {},\n  isLoading: false,\n  error: \"\"\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getUserPending: state => {\n      state.isLoading = true;\n    },\n    getUserSuccess: (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.user = payload;\n      state.error = \"\";\n    },\n    getUserFail: (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.error = payload;\n    }\n  }\n});\nexport const {\n  getUserPending,\n  getUserSuccess,\n  getUserFail\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Man/Downloads/Compressed/crm-ticket/crm-frontend-8674e752f8218131abd459f664a565932ab1519e/src/pages/dashboard/userSlice.js"],"names":["createSlice","initialState","user","isLoading","error","userSlice","name","reducers","getUserPending","state","getUserSuccess","payload","getUserFail","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,MADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAGC,KAAD,IAAW;AACzBA,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRO,IAAAA,cAAc,EAAE,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACtCF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACP,IAAN,GAAaS,OAAb;AACAF,MAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AACD,KARO;AASRQ,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR,KAAwB;AACnCF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcO,OAAd;AACD;AAZO;AAHkB,CAAD,CAA7B;AAmBA,OAAO,MAAM;AACXH,EAAAA,cADW;AAEXE,EAAAA,cAFW;AAGXE,EAAAA;AAHW,IAITP,SAAS,CAACQ,OAJP;AAMP,eAAeR,SAAS,CAACS,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: {},\n  isLoading: false,\n  error: \"\",\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getUserPending: (state) => {\n      state.isLoading = true;\n    },\n    getUserSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.user = payload;\n      state.error = \"\";\n    },\n    getUserFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n  },\n});\n\nexport const {\n  getUserPending,\n  getUserSuccess,\n  getUserFail,\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}