{"ast":null,"code":"import axios from \"axios\";\nconst rootUrl = \"http://localhost:3001/v1/\";\nconst ticketUlr = rootUrl + \"ticket/\";\nconst closeTicketUrl = rootUrl + \"ticket/close-ticket/\";\nexport const getAllTickets = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(\"http://localhost:3001/v1/ticket\", {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\")\n        }\n      });\n      resolve(result);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const getSingleTicket = _id => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(ticketUlr + _id, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\")\n        }\n      });\n      resolve(result);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\nexport const updateReplyTicket = (_id, msgObj) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.put(ticketUlr + _id, msgObj, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\")\n        }\n      });\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\nexport const updateTicketStatusClosed = _id => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.patch(closeTicketUrl + _id, {}, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\")\n        }\n      });\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\nexport const createNewTicket = frmData => {\n  console.log(\"from api\", frmData);\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.post(ticketUlr, frmData, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\")\n        }\n      });\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Man/Downloads/Compressed/crm-ticket/crm-frontend-8674e752f8218131abd459f664a565932ab1519e/src/api/ticketApi.js"],"names":["axios","rootUrl","ticketUlr","closeTicketUrl","getAllTickets","Promise","resolve","reject","result","get","headers","Authorization","sessionStorage","getItem","error","getSingleTicket","_id","console","log","message","updateReplyTicket","msgObj","put","data","updateTicketStatusClosed","patch","createNewTicket","frmData","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst rootUrl = \"http://localhost:3001/v1/\";\nconst ticketUlr = rootUrl + \"ticket/\";\nconst closeTicketUrl = rootUrl + \"ticket/close-ticket/\";\n\nexport const getAllTickets = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(\"http://localhost:3001/v1/ticket\", {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nexport const getSingleTicket = (_id) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(ticketUlr + _id, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n\nexport const updateReplyTicket = (_id, msgObj) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.put(ticketUlr + _id, msgObj, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n\nexport const updateTicketStatusClosed = (_id) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.patch(\n        closeTicketUrl + _id,\n        {},\n        {\n          headers: {\n            Authorization: sessionStorage.getItem(\"accessJWT\"),\n          },\n        }\n      );\n\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n\nexport const createNewTicket = (frmData) => {\n  console.log(\"from api\", frmData);\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.post(ticketUlr, frmData, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(error);\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}