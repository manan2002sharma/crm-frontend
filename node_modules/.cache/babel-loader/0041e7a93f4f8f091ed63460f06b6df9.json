{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Man\\\\Downloads\\\\Compressed\\\\crm-ticket\\\\crm-frontend-8674e752f8218131abd459f664a565932ab1519e\\\\src\\\\components\\\\private-route\\\\PrivateRoute.comp.js\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { loginSuccess } from \"../login/loginSlice\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\nimport { fetchNewAccessJWT } from \"../../api/userApi\";\nimport { DefaultLayout } from \"../../layout/DefaultLayout\";\nexport const PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  const {\n    isAuth\n  } = useSelector(state => state.login);\n  const {\n    user\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const updateAccessJWT = async () => {\n      const result = await fetchNewAccessJWT();\n      result && dispatch(loginSuccess());\n    };\n\n    !user._id && dispatch(getUserProfile());\n    !sessionStorage.getItem(\"accessJWT\") && localStorage.getItem(\"crmSite\") && updateAccessJWT();\n    !isAuth && sessionStorage.getItem(\"accessJWT\") && dispatch(loginSuccess());\n  }, [dispatch, isAuth, user._id]);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: () => isAuth ? /*#__PURE__*/React.createElement(DefaultLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }\n    }, children) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 62\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["C:/Users/Man/Downloads/Compressed/crm-ticket/crm-frontend-8674e752f8218131abd459f664a565932ab1519e/src/components/private-route/PrivateRoute.comp.js"],"names":["React","useEffect","useSelector","useDispatch","Route","Redirect","loginSuccess","getUserProfile","fetchNewAccessJWT","DefaultLayout","PrivateRoute","children","rest","dispatch","isAuth","state","login","user","updateAccessJWT","result","_id","sessionStorage","getItem","localStorage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AAEA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,SAASC,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACrD,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWf,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAA5B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,eAAe,GAAG,YAAY;AAClC,YAAMC,MAAM,GAAG,MAAMX,iBAAiB,EAAtC;AACAW,MAAAA,MAAM,IAAIN,QAAQ,CAACP,YAAY,EAAb,CAAlB;AACD,KAHD;;AAKA,KAACW,IAAI,CAACG,GAAN,IAAaP,QAAQ,CAACN,cAAc,EAAf,CAArB;AAEA,KAACc,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAD,IACEC,YAAY,CAACD,OAAb,CAAqB,SAArB,CADF,IAEEJ,eAAe,EAFjB;AAIA,KAACJ,MAAD,IAAWO,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,IAAkDT,QAAQ,CAACP,YAAY,EAAb,CAA1D;AACD,GAbQ,EAaN,CAACO,QAAD,EAAWC,MAAX,EAAmBG,IAAI,CAACG,GAAxB,CAbM,CAAT;AAeA,sBACE,oBAAC,KAAD,oBACMR,IADN;AAEE,IAAA,MAAM,EAAE,MACNE,MAAM,gBAAG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBH,QAAhB,CAAH,gBAA+C,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAQD,CA5BM","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { loginSuccess } from \"../login/loginSlice\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\n\nimport { fetchNewAccessJWT } from \"../../api/userApi\";\n\nimport { DefaultLayout } from \"../../layout/DefaultLayout\";\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n  const dispatch = useDispatch();\n  const { isAuth } = useSelector((state) => state.login);\n  const { user } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    const updateAccessJWT = async () => {\n      const result = await fetchNewAccessJWT();\n      result && dispatch(loginSuccess());\n    };\n\n    !user._id && dispatch(getUserProfile());\n\n    !sessionStorage.getItem(\"accessJWT\") &&\n      localStorage.getItem(\"crmSite\") &&\n      updateAccessJWT();\n\n    !isAuth && sessionStorage.getItem(\"accessJWT\") && dispatch(loginSuccess());\n  }, [dispatch, isAuth, user._id]);\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        isAuth ? <DefaultLayout>{children}</DefaultLayout> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}